version: '3'
services:
  php83: #创建 php的容器
    build:
      context: ${PHP_CONTEXT_DIR}
      args:
        PHP_VERSION: php:${PHP_VERSION}
        PHP_EXTENSIONS: ${PHP_EXTENSIONS}
        COMPOSER_URL: ${COMPOSER_URL}
        TZ: "$TZ"
    image: php83:latest #给构建的镜像起名字
    container_name: ${PHP_CONTAINER_NAME} #容器名称
    expose:
      - 9501
    ports:
      - 8000:8000
    restart: always  #如果容器意外退出，需要能够自动重启，以保证服务的可用性
    volumes:
      - ${ROOT_DIR}:/www #映射项目目录
      - ${PHP_CONF_FILE}:/usr/local/etc/php/php.ini:ro
      
  php74: #创建 php的容器
    build:
      context: ${PHP74_CONTEXT_DIR}
      args:
        PHP_VERSION: php:${PHP74_VERSION}
        PHP_EXTENSIONS: ${PHP74_EXTENSIONS}
        COMPOSER_URL: ${COMPOSER_URL}
        TZ: "$TZ"
    container_name: ${PHP74_CONTAINER_NAME} #容器名称
    image: php74:latest #给构建的镜像起名字
    expose:
      - 9502
    restart: always  #如果容器意外退出，需要能够自动重启，以保证服务的可用性
    volumes:
      - ${ROOT_DIR}:/www #映射项目目录
      - ${PHP74_CONF_FILE}:/usr/local/etc/php/php.ini:ro


  nginx: #创建 nginx容器
    container_name: ${NGINX_CONTAINER_NAME}
    image: nginx:${NGINX_VERSION}
    ports:  #映射 80和443端口到本机
      - ${NGINX_HTTP_HOST_PORT}:80
      - ${NGINX_HTTPS_HOST_PORT}:443
    restart: always
    environment:
      TZ: $TZ
    volumes:
      - ${ROOT_DIR}:/www:rw  #映射项目目录
      - ${NGINX_CONFD_DIR}:/etc/nginx/conf.d:rw #映射配置目录
      - ${NGINX_CONF_FILE}:/etc/nginx/nginx.conf:ro #映射配置文件
      - ${NGINX_LOG_DIR}:/var/log/nginx:rw #映射日志文件
      - ${NGINX_SSL_DIR}:/ssl:rw #ssl证书目录

  mysql:
    container_name: ${MYSQL_CONTAINER_NAME}
    image: mysql:${MYSQL_VERSION}
    volumes:
      - ${MYSQL_CONF_FILE}:/etc/mysql/conf.d/mysql.cnf:ro
      - ${MYSQL_LOG_DIR}:/var/log/mysql:rw
      - ${MYSQL_DATA_DIR}:/var/lib/mysql:rw
    ports:
      - ${MYSQL_HOST_PORT}:3306
    restart: always
    environment:
      TZ: $TZ
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD} #root密码

  redis: #创建 reids的容器
    container_name: ${REDIS_CONTAINER_NAME}
    image: redis:${REDIS_VERSION}
    restart: always
    environment:
      TZ: $TZ
    ports:
      - ${REDIS_HOST_PORT}:6379
    volumes:
      - ${REDIS_CONF_FILE}:/etc/redis/redis.conf
      - ${REDIS_DATA_FILE}:/data:rw
    command: /bin/sh -c "redis-server /etc/redis/redis.conf" # 指定配置文件
    # entrypoint: ["redis-server", "/etc/redis.conf"]

  node:
    image: node:${NODE_VERSION}
    environment:
      - NODE_ENV=dev
    volumes:
      - ${ROOT_DIR}:/www/:rw
    expose:
      - "8081"
    networks:
      - default
    stdin_open: true
    tty: true

networks:
  default:
    driver: bridge
    ipam:
      driver: default